[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "text2sql-assistant"
version = "1.0.0"
description = "A comprehensive Text-to-SQL generation system with advanced evaluation capabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Text-to-SQL Team", email = "team@text2sql.com"},
]
maintainers = [
    {name = "Text-to-SQL Team", email = "team@text2sql.com"},
]
keywords = ["text2sql", "nlp", "sql", "language-processing", "natural-language", "evaluation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "pandas>=1.5.0,<3.0.0",
    "numpy>=1.21.0,<2.0.0",
    "sqlalchemy>=2.0.0,<3.0.0",
    "sqlglot>=10.0.0,<15.0.0",
    "streamlit>=1.28.0,<2.0.0",
    "fastapi>=0.100.0,<1.0.0",
    "uvicorn[standard]>=0.20.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "transformers>=4.30.0,<5.0.0",
    "torch>=2.0.0,<3.0.0",
    "accelerate>=0.20.0,<1.0.0",
    "duckdb>=0.8.0,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "datasets>=2.14.0,<3.0.0",
    "peft>=0.4.0,<1.0.0",
    "sqlparse>=0.4.0,<0.5.0",
    "plotly>=5.0.0,<6.0.0",
    "jinja2>=3.0.0,<4.0.0",
    "gunicorn>=20.1.0,<22.0.0",
    "psutil>=5.9.0,<6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/text2sql-assistant"
Documentation = "https://text2sql-assistant.readthedocs.io/"
Repository = "https://github.com/your-org/text2sql-assistant.git"
"Bug Tracker" = "https://github.com/your-org/text2sql-assistant/issues"

[project.scripts]
text2sql = "src.cli.main:main"
text2sql-eval = "scripts.run_evaluation:main"
text2sql-ui = "scripts.evaluation_ui:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "eval*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.txt", "*.md"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "eval", "scripts"]
known_third_party = ["streamlit", "fastapi", "sqlalchemy", "transformers"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "streamlit.*",
    "plotly.*",
    "sqlglot.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src", "eval", "scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]
